import java.util.Scanner;

public class Jogo {
 
    private char[][] tabuleiro;
    private char[][] tabuleiroTesouro;
    // Fiz uma outra matriz para registrar o percurso do jogador
    private char[][] caminho;
    // botei uma variavel para controlar se o tesouro foi encontrado
    private boolean tesouroAchado = false;
    Scanner scan = new Scanner(System.in);

    public void iniciar() {
        tabuleiro = new char[8][8];
        tabuleiroTesouro = new char[8][8];
        caminho = new char[8][8];
        for (int i = 0; i < 8; i++) {
            for (int j = 0; j < 8; j++) {
                caminho[i][j] = '-';
            }
        }
        popularTabuleiro();
        colocarTesouro();
        colocarJogador();
        tabuleiroIniciar();
        movimento(scan);
    }
    
    private void colocarTesouro() {
        char tesouro = 'T';
        int linha = 0;
        int coluna = 0;
        do { 
        linha = (int) (Math.random() * 8);
        coluna = (int) (Math.random() * 8);
        tabuleiro[linha][coluna] = tesouro;
        tabuleiroTesouro[linha][coluna] = tesouro;
        } while (linha==0 && coluna == 0);
    }

    private void popularTabuleiro(){
        for (int linha = 0; linha < tabuleiro.length; linha++) {
            for (int coluna = 0; coluna < tabuleiro[0].length; coluna++) {
                tabuleiro[linha][coluna] = '-';
            }
            System.out.println();
        }
    }

    // Se o tesouro ainda não foi achado, o 'T' vai ficar escondido, da pra mudar isso se deixar tesouroAchado = True pra testar
    private void tabuleiroIniciar(){
        for (int linha = 0; linha < tabuleiro.length; linha++) {
            for (int coluna = 0; coluna < tabuleiro[0].length; coluna++) {
                if (tabuleiro[linha][coluna]=='T' && !tesouroAchado)
                    System.out.print('-');
                else
                    System.out.print(tabuleiro[linha][coluna]);
            }
            System.out.println();
        }
    }

    private void colocarJogador(){
        char jogador = 'P';
        tabuleiro[0][0] = jogador;
    }

    private void movimento(Scanner scan){
        String movimento = "";
        boolean achou = false;
        boolean moveu = false;
        do { 
            System.out.println("Escolha um movimento para ser feito: Cima, baixo, esquerda, direita");
            movimento = scan.next().toLowerCase();
            moveu = false;
            switch (movimento) {
                case "cima":
                    for (int linha = 0; linha < tabuleiro.length && !moveu; linha++) {
                        for (int coluna = 0; coluna < tabuleiro[0].length && !moveu; coluna++) {
                            if (tabuleiro[linha][coluna] == 'P') {
                                if (linha - 1 >= 0) { 
                                    caminho[linha][coluna] = '+';
                                    tabuleiro[linha - 1][coluna] = 'P';
                                    tabuleiro[linha][coluna] = '-';
                                    moveu=true;
                                } else {
                                    System.out.println("Movimento inválido! Escolha outro movimento");
                                    tabuleiroIniciar();
                                }
                                break;
                            }
                        }
                    }
                    break;
    
                case "baixo":
                    for (int linha = 0; linha < tabuleiro.length && !moveu; linha++) {
                        for (int coluna = 0; coluna < tabuleiro[0].length && !moveu; coluna++) {
                            if (tabuleiro[linha][coluna] == 'P') {
                                if (linha + 1 < tabuleiro.length) { 
                                    caminho[linha][coluna] = '+';
                                    tabuleiro[linha + 1][coluna] = 'P';
                                    tabuleiro[linha][coluna] = '-';
                                    moveu = true;
                                } else {
                                    System.out.println("Movimento inválido! Escolha outro movimento");
                                    tabuleiroIniciar();
                                }
                            }
                        }
                    }
                    break;
    
                case "esquerda":
                    for (int linha = 0; linha < tabuleiro.length && !moveu; linha++) {
                        for (int coluna = 0; coluna < tabuleiro[0].length && !moveu; coluna++) {
                            if (tabuleiro[linha][coluna] == 'P') {
                                if (coluna - 1 >= 0) { 
                                    caminho[linha][coluna] = '+';
                                    tabuleiro[linha][coluna - 1] = 'P';
                                    tabuleiro[linha][coluna] = '-';
                                    moveu = true;
                                } else {
                                    System.out.println("Movimento inválido! Escolha outro movimento");
                                    tabuleiroIniciar();
                                }
                                break;
                            }
                        }
                    }
                    break;
    
                case "direita":
                    for (int linha = 0; linha < tabuleiro.length && !moveu; linha++) {
                        for (int coluna = 0; coluna < tabuleiro[0].length && !moveu; coluna++) {
                            if (tabuleiro[linha][coluna] == 'P') {
                                if (coluna + 1 < tabuleiro[0].length) { 
                                    caminho[linha][coluna] = '+';
                                    tabuleiro[linha][coluna + 1] = 'P';
                                    tabuleiro[linha][coluna] = '-';
                                    moveu = true;
                                } else {
                                    System.out.println("Movimento inválido! Escolha outro movimento");
                                    tabuleiroIniciar();
                                }
                                break;
                            }
                        }
                    }
                    break;
    
                default:
                    System.out.println("Comando inválido, insira um movimento válido");
                    tabuleiroIniciar();
                    break;
            }
            if (moveu) {
                tabuleiroIniciar(); 
            }
    
            for (int linha = 0; linha < tabuleiro.length; linha++) {
                for (int coluna = 0; coluna < tabuleiro[0].length; coluna++) {
                    if (tabuleiro[linha][coluna] == 'P' && tabuleiroTesouro[linha][coluna] == 'T') {
                        System.out.println("Parabéns! Você encontrou o tesouro!");
                        achou = true;
                        tesouroAchado = true;
                        // Atualiza a célula atual para exibir o 'T' (revelando o tesouro) ao invés de deixar o P
                        tabuleiro[linha][coluna] = 'T';
                        for (int l = 0; l < tabuleiro.length; l++) {
                            for (int c = 0; c < tabuleiro[0].length; c++) {
                                if (caminho[l][c] == '+') {
                                    tabuleiro[l][c] = '+';
                                }
                            }
                        }
                        break;
                    }
                }
                if (achou)
                    break;
            }
        } while (!achou);
        
        // Print  final do tabuleiro com o percurso e o tesouro
        System.out.println("Tabuleiro Final:");
        tabuleiroIniciar();
    }
}
